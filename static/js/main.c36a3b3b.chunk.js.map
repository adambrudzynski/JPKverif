{"version":3,"sources":["services/hashSHA265File.js","services/components/verif/Verif.jsx","App.js","reportWebVitals.js","index.js"],"names":["digestMessage","message","a","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","hexToBase64","str","btoa","String","fromCharCode","apply","replace","split","parseString","require","corsProxy","Verif","useState","hash","setHash","referenceNo","setReferenceNo","UPOhash","setUPOhash","upo","setUpo","upoStatus","setUpoStatus","handleFile","e","reader","FileReader","readAsArrayBuffer","target","files","onload","result","digestHex","onerror","console","log","error","handleSubmit","type","preventDefault","getUPO","fetch","req","json","resp","Description","Upo","err","potwierdzenie","Potwierdzenie","skrotDokumentu","SkrotDokumentu","match","className","onChange","htmlFor","id","disabled","value","style","color","placeholder","onClick","length","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c36a3b3b.chunk.js","sourcesContent":["export  async function hashSHA256File(e) {\r\n  const file = e.target.files[0];\r\n  let reader = new FileReader();\r\n\r\n  reader.readAsArrayBuffer(file);\r\n  reader.onload = async function () {\r\n    const digestHex = await digestMessage(reader.result);\r\n    console.log('hashSHA256File onload result: ', digestHex);\r\n    return digestHex;\r\n  };\r\n  reader.onerror = function () {\r\n    console.log(reader.error);\r\n  };\r\n}\r\n\r\nexport async function digestMessage(message) {\r\n  const hashBuffer = await crypto.subtle.digest('SHA-256', message); \r\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n  const hashHex = hashArray\r\n    .map((b) => b.toString(16).padStart(2, '0'))\r\n    .join('');\r\n  return hexToBase64(hashHex);\r\n}\r\n\r\n\r\nfunction hexToBase64(str) {\r\n  return btoa(String.fromCharCode.apply(null,\r\n    str.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \"))\r\n  );\r\n}\r\n\r\nfunction base64ToHex(str) {\r\n  for (var i = 0, bin = atob(str.replace(/[ \\r\\n]+$/, \"\")), hex = []; i < bin.length; ++i) {\r\n    var tmp = bin.charCodeAt(i).toString(16);\r\n    if (tmp.length === 1) tmp = \"0\" + tmp;\r\n    hex[hex.length] = tmp;\r\n  }\r\n  return hex.join(\" \");\r\n}\r\n\r\n// function Hex2Bin(n){if(!checkHex(n))return 0;return parseInt(n,16).toString(2)}\r\n// function checkBin(n){return/^[01]{1,64}$/.test(n)}\r\n// function checkDec(n){return/^[0-9]{1,64}$/.test(n)}\r\n// function checkHex(n){return/^[0-9A-Fa-f]{1,64}$/.test(n)}\r\n// function pad(s,z){s=\"\"+s;return s.length<z?pad(\"0\"+s,z):s}\r\n// function unpad(s){s=\"\"+s;return s.replace(/^0+/,'')}\r\n\r\n// //Decimal operations\r\n// function Dec2Bin(n){if(!checkDec(n)||n<0)return 0;return n.toString(2)}\r\n// function Dec2Hex(n){if(!checkDec(n)||n<0)return 0;return n.toString(16)}\r\n\r\n// //Binary Operations\r\n// function Bin2Dec(n){if(!checkBin(n))return 0;return parseInt(n,2).toString(10)}\r\n// function Bin2Hex(n){if(!checkBin(n))return 0;return parseInt(n,2).toString(16)}\r\n\r\n// //Hexadecimal Operations\r\n// // function Hex2Bin(n){if(!checkHex(n))return 0;return parseInt(n,16).toString(2)}\r\n// function Hex2Dec(n){if(!checkHex(n))return 0;return parseInt(n,16).toString(10)}","import React, {useState} from 'react';\r\nimport {digestMessage} from '../../hashSHA265File';\r\nconst parseString = require('xml2js').parseString;\r\n\r\nconst corsProxy = 'https://cors.3cstop.workers.dev/?';\r\n\r\nexport default function Verif() {\r\n  const [hash, setHash] = useState('');\r\n  const [referenceNo, setReferenceNo] = useState('');\r\n  const [UPOhash, setUPOhash] = useState('');\r\n  const [upo, setUpo] = useState();\r\n  const [upoStatus, setUpoStatus] = useState('');\r\n\r\n  const handleFile = async (e) => {\r\n    let reader = new FileReader();\r\n    reader.readAsArrayBuffer(e.target.files[0]);\r\n    reader.onload = async function () {\r\n      const digestHex = await digestMessage(reader.result);\r\n      setHash(digestHex);\r\n    };\r\n    reader.onerror = function () {\r\n      console.log(reader.error);\r\n      setHash('błąd :( ');\r\n    };\r\n  };\r\n  const handleReferenceNo = ({target}) => {\r\n    setReferenceNo(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e, type) => {\r\n    e.preventDefault();\r\n    getUPO(referenceNo, type);\r\n  };\r\n\r\n  async function getUPO(referenceNo, type) {\r\n    setUPOhash('');\r\n    setUpo('');\r\n    setUpoStatus('');\r\n    const req = await fetch(\r\n      `${corsProxy}https://${\r\n        type === 'test' ? 'test-' : ''\r\n      }e-dokumenty.mf.gov.pl/api/Storage/Status/${referenceNo}`\r\n    );\r\n    const resp = await req.json();\r\n    resp.Description && setUpoStatus(resp.Description);\r\n    if (resp.Upo) {\r\n      parseString(resp.Upo, function (err, result) {\r\n        console.log(result[\"ds:Signature\"][\"ds:Object\"]);\r\n        // console.log(result[\"ds:Signature\"][\"ds:Object\"][1].Potwierdzenie[0]);\r\n        const potwierdzenie =\r\n          result['ds:Signature']['ds:Object'][1].Potwierdzenie ? result['ds:Signature']['ds:Object'][1].Potwierdzenie[0] : result['ds:Signature']['ds:Object'][0].Potwierdzenie[0] ;\r\n        const skrotDokumentu = potwierdzenie.SkrotDokumentu[0].match(\r\n          /(?<=\\[).+?(?=\\])/gm\r\n        )[0];\r\n        setUpo(potwierdzenie);\r\n        setUPOhash(skrotDokumentu);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"block\">\r\n        <input type=\"file\" onChange={(e) => handleFile(e)} />\r\n        <label htmlFor=\"fileHash\">Skrót załączonego pliku XML</label>\r\n        <input\r\n          id=\"fileHash\"\r\n          type=\"text\"\r\n          disabled\r\n          value={hash}\r\n          style={{color: hash === UPOhash ? 'green' : 'red'}}\r\n        />\r\n      </div>\r\n      <div className=\"block\">\r\n        <label htmlFor=\"nrUPO\">Nr referencyjny (UPO):</label>\r\n        <input\r\n          id=\"nrUPO\"\r\n          placeholder=\"Nr referencyjny...\"\r\n          onChange={handleReferenceNo}\r\n          value={referenceNo}\r\n          type=\"text\"\r\n        />\r\n        <div>\r\n          <button onClick={handleSubmit} disabled={referenceNo.length !== 32}>\r\n            Pobierz UPO\r\n          </button>\r\n          <button\r\n            onClick={(e) => handleSubmit(e, 'test')}\r\n            disabled={referenceNo.length !== 32}\r\n          >\r\n            Pobierz UPO z bamki TEST\r\n          </button>\r\n        </div>\r\n        <input value={upoStatus} disabled placeholder=\"Status\" />\r\n\r\n        <label>Skrót złożonego dokumentu pobrany z UPO:</label>\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          value={UPOhash}\r\n          style={{color: hash === UPOhash ? 'green' : 'red'}}\r\n        />\r\n        <textarea disabled value={JSON.stringify(upo, null, 2)} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Verif from './services/components/verif/Verif';\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Verif />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}